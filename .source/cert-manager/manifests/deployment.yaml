---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cert-manager-cainjector
  namespace: tbd-certificates-system # +operator-builder:field:name=namespace,default="tbd-certificates-system",type=string
  labels:
    app: cainjector
    app.kubernetes.io/name: cainjector
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/component: cainjector
    app.kubernetes.io/version: v1.14.4
    platform.nukleros.io/category: certificates
    platform.nukleros.io/project: cert-manager
spec:
  # +operator-builder:field:name=certManager.injector.replicas,default="2",type=int,description=`
  # Number of replicas to use for the cert-manager cainjector deployment.`
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: cainjector
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/component: cainjector
  template:
    metadata:
      labels:
        app: cainjector
        app.kubernetes.io/name: cainjector
        app.kubernetes.io/instance: cert-manager
        app.kubernetes.io/component: cainjector
        app.kubernetes.io/version: v1.14.4
        platform.nukleros.io/category: certificates
        platform.nukleros.io/project: cert-manager
    spec:
      serviceAccountName: cert-manager-cainjector
      enableServiceLinks: false
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
        runAsGroup: 1001
        runAsNonRoot: true
      containers:
        - name: cert-manager-cainjector
          # +operator-builder:field:name=certManager.injector.image,default="quay.io/jetstack/cert-manager-cainjector:v1.14.4",type=string,description=`
          # Image to use for cert-manager CA injector deployment.`
          image: quay.io/jetstack/cert-manager-cainjector:v1.14.4
          imagePullPolicy: IfNotPresent
          args:
            - --v=2
            - --leader-election-namespace=$(POD_NAMESPACE)
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          resources:
            requests:
              # +operator-builder:field:name=certManager.injector.resources.requests.cpu,default="50m",type=string,description=`
              # CPU requests to use for cert-manager CA injector deployment.`
              cpu: 50m
              # +operator-builder:field:name=certManager.injector.resources.requests.memory,default="64Mi",type=string,description=`
              # Memory requests to use for cert-manager CA injector deployment.`
              memory: 64Mi
            limits:
              # +operator-builder:field:name=certManager.injector.resources.limits.memory,default="128Mi",type=string,description=`
              # Memory limits to use for cert-manager CA injector deployment.`
              memory: 128Mi
      nodeSelector:
        kubernetes.io/os: linux
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - cert-manager-cainjector
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cert-manager
  namespace: tbd-certificates-system # +operator-builder:field:name=namespace,default="tbd-certificates-system",type=string
  labels:
    app: cert-manager
    app.kubernetes.io/name: cert-manager
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/component: controller
    app.kubernetes.io/version: v1.14.4
    platform.nukleros.io/category: certificates
    platform.nukleros.io/project: cert-manager
spec:
  # +operator-builder:field:name=certManager.controller.replicas,default="2",type=int,description=`
  # Number of replicas to use for the cert-manager controller deployment.`
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/component: controller
  template:
    metadata:
      labels:
        app: cert-manager
        app.kubernetes.io/name: cert-manager
        app.kubernetes.io/instance: cert-manager
        app.kubernetes.io/component: controller
        app.kubernetes.io/version: v1.14.4
        platform.nukleros.io/category: certificates
        platform.nukleros.io/project: cert-manager
      annotations:
        prometheus.io/path: /metrics
        prometheus.io/scrape: "true"
        prometheus.io/port: "9402"
    spec:
      serviceAccountName: cert-manager
      enableServiceLinks: false
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
        runAsGroup: 1001
        runAsNonRoot: true
      containers:
        - name: cert-manager-controller
          # +operator-builder:field:name=certManager.controller.image,default="quay.io/jetstack/cert-manager-controller:v1.14.4",type=string,description=`
          # Image to use for cert-manager controller deployment.`
          image: quay.io/jetstack/cert-manager-controller:v1.14.4
          imagePullPolicy: IfNotPresent
          args:
            - --v=2
            - --cluster-resource-namespace=$(POD_NAMESPACE)
            - --leader-election-namespace=$(POD_NAMESPACE)
            - --acme-http01-solver-image=quay.io/jetstack/cert-manager-acmesolver:v1.14.4
            - --max-concurrent-challenges=60
          ports:
            - containerPort: 9402
              name: http-metrics
              protocol: TCP
            - containerPort: 9403
              name: http-healthz
              protocol: TCP
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          livenessProbe:
            httpGet:
              port: http-healthz
              path: /livez
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 15
            successThreshold: 1
            failureThreshold: 8
          resources:
            requests:
              # +operator-builder:field:name=certManager.controller.resources.requests.cpu,default="25m",type=string,description=`
              # CPU requests to use for cert-manager controller deployment.`
              cpu: 25m
              # +operator-builder:field:name=certManager.controller.resources.requests.memory,default="32Mi",type=string,description=`
              # Memory requests to use for cert-manager controller deployment.`
              memory: 32Mi
            limits:
              # +operator-builder:field:name=certManager.controller.resources.limits.memory,default="64Mi",type=string,description=`
              # Memory limits to use for cert-manager controller deployment.`
              memory: 64Mi
      nodeSelector:
        kubernetes.io/os: linux
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - cert-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cert-manager-webhook
  namespace: tbd-certificates-system # +operator-builder:field:name=namespace,default="tbd-certificates-system",type=string
  labels:
    app: webhook
    app.kubernetes.io/name: webhook
    app.kubernetes.io/instance: cert-manager
    app.kubernetes.io/component: webhook
    app.kubernetes.io/version: v1.14.4
    platform.nukleros.io/category: certificates
    platform.nukleros.io/project: cert-manager
spec:
  # +operator-builder:field:name=certManager.webhook.replicas,default="2",type=int,description=`
  # Number of replicas to use for the cert-manager webhook deployment.`
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: webhook
      app.kubernetes.io/instance: cert-manager
      app.kubernetes.io/component: webhook
  template:
    metadata:
      labels:
        app: webhook
        app.kubernetes.io/name: webhook
        app.kubernetes.io/instance: cert-manager
        app.kubernetes.io/component: webhook
        app.kubernetes.io/version: v1.14.4
        platform.nukleros.io/category: certificates
        platform.nukleros.io/project: cert-manager
    spec:
      serviceAccountName: cert-manager-webhook
      enableServiceLinks: false
      securityContext:
        fsGroup: 1001
        runAsUser: 1001
        runAsGroup: 1001
        runAsNonRoot: true
      containers:
        - name: cert-manager-webhook
          # +operator-builder:field:name=certManager.webhook.image,default="quay.io/jetstack/cert-manager-webhook:v1.14.4",type=string,description=`
          # Image to use for cert-manager webhook deployment.`
          image: quay.io/jetstack/cert-manager-webhook:v1.14.4
          imagePullPolicy: IfNotPresent
          args:
            - --v=2
            - --secure-port=10250
            - --dynamic-serving-ca-secret-namespace=$(POD_NAMESPACE)
            - --dynamic-serving-ca-secret-name=cert-manager-webhook-ca
            - --dynamic-serving-dns-names=cert-manager-webhook
            - --dynamic-serving-dns-names=cert-manager-webhook.$(POD_NAMESPACE)
            - --dynamic-serving-dns-names=cert-manager-webhook.$(POD_NAMESPACE).svc
          ports:
            - name: https
              protocol: TCP
              containerPort: 10250
            - name: healthcheck
              protocol: TCP
              containerPort: 6080
          livenessProbe:
            httpGet:
              path: /livez
              port: 6080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /healthz
              port: 6080
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 1
            successThreshold: 1
            failureThreshold: 3
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          resources:
            requests:
              # +operator-builder:field:name=certManager.webhook.resources.requests.cpu,default="25m",type=string,description=`
              # CPU requests to use for cert-manager webhook deployment.`
              cpu: 25m
              # +operator-builder:field:name=certManager.webhook.resources.requests.memory,default="32Mi",type=string,description=`
              # Memory requests to use for cert-manager webhook deployment.`
              memory: 32Mi
            limits:
              # +operator-builder:field:name=certManager.webhook.resources.limits.memory,default="64Mi",type=string,description=`
              # Memory limits to use for cert-manager webhook deployment.`
              memory: 64Mi
      nodeSelector:
        kubernetes.io/os: linux
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                topologyKey: kubernetes.io/hostname
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - cert-manager-cainjector
